version: '3.6'
services:
  postgres:
    container_name: postgres_mattermost
    image: postgres:13-alpine
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    pids_limit: 100
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql
    volumes:
      - ./mattermost/postgres:/var/lib/postgresql/data
    environment:
      - TZ=UTC
      - POSTGRES_USER=mmuser
      - POSTGRES_PASSWORD=mmuser_password
      - POSTGRES_DB=mattermost
  mattermost:
    depends_on:
      - postgres
    container_name: mattermost
    image: mattermost/mattermost-enterprise-edition:6.6
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    pids_limit: 200
    read_only: false
    tmpfs:
      - /tmp
    volumes:
      - ./mattermost/app/config:/mattermost/config:rw
      - ./mattermost/app/data:/mattermost/data:rw
      - ./mattermost/app/logs:/mattermost/logs:rw
      - ./mattermost/app/plugins:/mattermost/plugins:rw
      - ./mattermost/app/client/plugins:/mattermost/client/plugins:rw
      - ./mattermost/app/bleve-indexes:/mattermost/bleve-indexes:rw
    environment:
      - TZ=UTC
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://mmuser:mmuser_password@postgres:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes
      - MM_SERVICESETTINGS_SITEURL=http://localhost:8065
    ports:
      - 8065:8065
  healthchecks:
    image: lscr.io/linuxserver/healthchecks
    container_name: healthchecks
    environment:
      - PUID=1000
      - PGID=1000
      - SITE_ROOT=http://localhost:8000
      - SITE_NAME=Healthchecks
      - DEFAULT_FROM_EMAIL=me@andrewzigler.com
      - EMAIL_HOST=andrewzigler.com
      - EMAIL_PORT=25
      - EMAIL_HOST_USER=andrew
      - EMAIL_HOST_PASSWORD=argonaut
      - EMAIL_USE_TLS=False
      - SUPERUSER_EMAIL=me@andrewzigler.com
      - SUPERUSER_PASSWORD=argonaut
    volumes:
      - './healthchecks:/config'
    ports:
      - 8000:8000
    restart: always
  deckofcards:
    container_name: deckofcards
    build: ./deckofcards
    restart: always
    ports:
      - '8005:8005'
    volumes:
      - './deckofcards:/src'
    shm_size: '256m'
